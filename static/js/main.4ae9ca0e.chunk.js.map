{"version":3,"sources":["App.jsx","reportWebVitals.js","index.jsx"],"names":["App","useState","code","setCode","product","setProduct","count","setCount","result","setResult","total","setTotal","list","setList","bills","setBills","products","name","price","weight","className","type","placeholder","value","onChange","target","isNaN","find","onClick","time","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","filter","e","key","deleteHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ae9ca0e.chunk.js","sourcesContent":["import { useState } from 'react';\n\nimport './App.css';\n\nconst App = () => {\n\n    const [code, setCode] = useState('');\n    const [ product, setProduct ] = useState({});\n    const [count, setCount] = useState('');\n    const [result, setResult] = useState(0);\n    const [ total, setTotal ] = useState(0);\n    const [list, setList] = useState([]);\n    const [bills, setBills] = useState(225);\n\n    const products = [\n\n        {\n            code: '10',\n            name: 'cafe',\n            price: 136,\n            weight: 12\n        },\n        {\n            code: '11',\n            name: 'arroz',\n            price: 200,\n            weight: 5\n        },\n        {\n            code: '12',\n            name: 'manzana',\n            price: 50,\n            weight: 0.3\n        },\n\n    ]\n\n    function deleteHandler(bills, total){\n\n        setList(list => list.filter((e)=> e.key !== (bills + '') ));\n\n        setTotal(value=>value-total)\n\n    }\n\n    function addHandler(){\n\n        if(!count || !product.price) return false;\n\n        setTotal(total=>total+(product.price*count));\n\n        setBills(count=>++count)\n\n        let year = `${'Año ' + new Date().getFullYear()}`;\n        let month = ` ${'Mes ' + new Date().getMonth()}`;\n        let day = ` ${'Día ' + new Date().getDate()}`;\n        let hours =` ${'Hora ' + new Date().getHours()}`;\n        let minutes = `${':' + new Date().getMinutes()}`\n        let seconds = `${':' + new Date().getSeconds()}`;\n\n        let time = year + month + day + hours + minutes + seconds;\n\n        setList(list =>\n\n            [\n                ...list,         \n                <div className=\"bill\" key={bills}>\n                    <p>Cantidad: {count} de {product.name}</p>\n                    <p>Precio: {product.price} Bs.</p>\n                    <p>Fecha: { time }</p>\n                    <p>Total: {(product.price * count) + (((product.price * count)*16)/100)} Bs.</p>\n                    <button onClick={()=>{deleteHandler(bills, product.price * count)}}>Eliminar</button>\n                </div>\n            ]\n\n        )\n\n    }\n\n    function codeHandler(code){\n\n        const value = code.target.value;\n\n        if(isNaN(value)) return false;\n\n        setCode(value);\n\n        const result = products.find(product=>product.code === value);\n\n        if(!result){\n            \n            setResult(0);\n            setProduct({})\n        }\n            else {\n            \n                setResult(result.price)\n            \n                setProduct(result);\n            \n            }\n\n    }\n\n    function countHandler(count){\n\n        const value = count.target.value;\n\n        if(isNaN(value)) return false;\n\n        setCount(value)\n\n        if(product.price) setResult(product.price*value)\n\n    }\n\n    return (\n        <>\n            <section  className=\"calculator\">\n\n                <div className=\"main-input\">\n            \n                    <input type=\"text\" placeholder=\"Código\" value={code} onChange={codeHandler}/>\n                    <input  type=\"text\" placeholder=\"Cantidad: 1\" value={count} onChange={countHandler}/>\n            \n                    <div className=\"result\">\n            \n                        <p>Resultado:</p>\n            \n                        <p>{result} Bs.</p>\n\n                    </div>\n            \n                    <button onClick={addHandler} >Añadir</button>\n            \n                </div>\n\n                <div className=\"product\">\n\n                    <h2>Producto/s</h2>\n\n    <div className=\"container\"><p className=\"Name\">Nombre</p> <p className=\"value\">{product.name}</p></div>\n    <div className=\"container\"><p className=\"price\">Precio</p> <p className=\"value\">{product.price}</p></div>\n\n                </div>\n\n                <div className=\"history\">\n            \n                    <h2>Historial</h2>\n\n                <div className=\"view\">{list}</div>\n            \n                </div>\n\n            </section>\n\n            <section className=\"pay\">\n\n                <input type=\"text\" placeholder=\"Cedula\" className=\"card\"/>\n                <input type=\"text\" placeholder=\"Clave\" className=\"key\"/>\n\n\n    <div className=\"total\">\n        \n        <h2 className=\"title\">Sub Total:</h2>\n        <p className=\"result\">{total} Bs.</p>\n        <h2 className=\"title\">Total (+IVA 16%):</h2>\n        <p className=\"result\">{total + ((total*16)/100)} Bs.</p>\n        \n    </div>\n\n            </section>\n        </>\n\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}